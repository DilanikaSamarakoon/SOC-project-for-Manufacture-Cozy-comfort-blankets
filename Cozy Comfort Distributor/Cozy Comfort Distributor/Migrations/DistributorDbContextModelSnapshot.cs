// <auto-generated />
using System;
using Cozy_Comfort_Distributor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cozy_Comfort_Distributor.Migrations
{
    [DbContext(typeof(DistributorDbContext))]
    partial class DistributorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distributors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            ContactPerson = "Jane Doe",
                            Email = "jane@megamart.com",
                            Name = "Mega Mart",
                            Phone = "987-654-3210"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            ContactPerson = "Mike Ross",
                            Email = "mike@urbangoods.net",
                            Name = "Urban Goods",
                            Phone = "555-123-4567"
                        });
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.DistributorOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DistributorId");

                    b.ToTable("DistributorOrders");
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.DistributorOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlanketId")
                        .HasColumnType("int");

                    b.Property<int>("DistributorOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DistributorOrderId");

                    b.ToTable("DistributorOrderItems");
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.DistributorOrder", b =>
                {
                    b.HasOne("Cozy_Comfort_Distributor.Models.Distributor", "Distributor")
                        .WithMany("DistributorOrders")
                        .HasForeignKey("DistributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distributor");
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.DistributorOrderItem", b =>
                {
                    b.HasOne("Cozy_Comfort_Distributor.Models.DistributorOrder", "DistributorOrder")
                        .WithMany("Items")
                        .HasForeignKey("DistributorOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributorOrder");
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.Distributor", b =>
                {
                    b.Navigation("DistributorOrders");
                });

            modelBuilder.Entity("Cozy_Comfort_Distributor.Models.DistributorOrder", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
