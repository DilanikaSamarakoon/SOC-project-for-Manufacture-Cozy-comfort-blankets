@page
@model IndexModel
@{
    ViewData["Title"] = "Place Your Gadget Order";
}

<div class="text-center">
    <h1 class="display-4">Welcome to GadgetHub!</h1>
    <p>Your one-stop shop for the latest gadgets. We'll find the best deal for you!</p>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Place a New Order</h4>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @Model.ErrorMessage
                        </div>
                    }

                    <form method="post">
                        <div class="mb-3">
                            <label for="OrderId" class="form-label">Your Order ID:</label>
                            <input type="text" class="form-control" id="OrderId" asp-for="CustomerOrder.OrderId" readonly />
                        </div>

                        <h5>Order Items:</h5>
                        <div id="orderItemsContainer">
                            @for (int i = 0; i < Model.CustomerOrder.Items.Count; i++)
                            {
                                <div class="row mb-2 align-items-end border-bottom pb-2">
                                    <div class="col-md-5">
                                        <label asp-for="CustomerOrder.Items[i].ProductName" class="form-label">Product Name</label>
                                        <input type="text" class="form-control" asp-for="CustomerOrder.Items[i].ProductName" placeholder="e.g., SmartPhone" required />
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="CustomerOrder.Items[i].Quantity" class="form-label">Quantity</label>
                                        <input type="number" class="form-control" asp-for="CustomerOrder.Items[i].Quantity" min="1" required />
                                    </div>
                                    <div class="col-md-3 d-flex align-items-end">
                                        <button type="submit" asp-page-handler="RemoveItem" asp-route-index="@i" class="btn btn-danger btn-sm w-100">Remove</button>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <button type="submit" asp-page-handler="AddItem" class="btn btn-secondary me-2">Add Item</button>
                            <button type="submit" asp-page-handler="PlaceOrder" class="btn btn-success">Place Order</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.OrderSummary != null)
    {
        <div class="row justify-content-center mt-5">
            <div class="col-md-8">
                <div class="card shadow-sm">
                    <div class="card-header bg-info text-white">
                        <h4 class="mb-0">Order Summary for Order: @Model.OrderSummary.OrderId</h4>
                    </div>
                    <div class="card-body">
                        <p><strong>Overall Status:</strong> <span class="badge @(Model.OrderSummary.OverallStatus == "Failed" || Model.OrderSummary.OverallStatus.Contains("Unfulfilled") ? "bg-danger" : "bg-success")">@Model.OrderSummary.OverallStatus</span></p>
                        <p><strong>Overall Message:</strong> @Model.OrderSummary.OverallMessage</p>
                        <p><strong>Total Estimated Cost:</strong> <span class="fw-bold">$@Model.OrderSummary.TotalEstimatedCost.ToString("F2")</span></p>

                        <h5 class="mt-4">Product Fulfillment Details:</h5>
                        <ul class="list-group">
                            @foreach (var productResult in Model.OrderSummary.ProductResults)
                            {
                                <li class="list-group-item">
                                    <strong>Product ID:</strong> @productResult.ProductId (Requested: @productResult.RequestedQuantity)<br />
                                    <strong>Status:</strong> <span class="badge @(productResult.FullyFulfilled ? "bg-success" : "bg-warning text-dark")">@productResult.StatusMessage</span><br />
                                    @if (productResult.FullyFulfilled)
                                    {
                                        <span><strong>Best Distributor:</strong> @productResult.BestDistributor</span>
                            
                                        <br />
                                        <span><strong>Price/Unit:</strong> $@productResult.BestPricePerUnit.ToString("F2")</span>

                                        <br />
                                        <span><strong>Estimated Delivery:</strong> @productResult.EstimatedDeliveryDaysFromBest days</span>

                                        <br />
                                    }
                                    @if (productResult.OtherDistributorOptions != null && productResult.OtherDistributorOptions.Any())
                                    {
                                        <span><strong>Other Options:</strong> @string.Join(", ", productResult.OtherDistributorOptions)</span>
                            
                                        <br />
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
